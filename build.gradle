plugins {
    id 'java'
    id 'application'
    id 'idea'
}

group 'com.example'
version '1.0-SNAPSHOT'

sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main']
        }
        resources { srcDirs = ['src/resources'] }
    }
}

dependencies {
    // Desktop app deps
    implementation 'com.h2database:h2:2.3.232'
    runtimeOnly 'com.h2database:h2:2.3.232'
    implementation 'com.formdev:flatlaf:3.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

application {
    // Leave your desktop entry as-is OR point to Spring Boot if you want to launch it
    // from Boot. Keeping it vanilla:
    mainClass = 'main.Main'
}

// Enable Gradle Continuous Build support for the run task by declaring inputs.
// Now you can do: `./gradlew run --continuous` and the app will rebuild and re-run
// whenever files in src/main or src/resources change.
// Note: You must keep the Gradle process running in the terminal.
 tasks.named('run') {
    // Watch all source and resource files
    inputs.files(fileTree('src/main'))
    inputs.files(fileTree('src/resources'))
    // Always re-run on change (avoid UP-TO-DATE short-circuit)
    outputs.upToDateWhen { false }
}

// Convenience aliases. Use with --continuous
// e.g., `./gradlew dev --continuous` or `./gradlew runOnSave --continuous`
 tasks.register('runOnSave') {
    dependsOn 'run'
    doLast {
        println "Tip: Keep this running with: ./gradlew runOnSave --continuous"
    }
}

 tasks.register('dev') {
    dependsOn 'run'
    doLast {
        println "Tip: Keep this running with: ./gradlew dev --continuous"
    }
}

 test {
    useJUnitPlatform()
}
